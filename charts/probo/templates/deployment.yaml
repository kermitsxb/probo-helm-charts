apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "probo.fullname" . }}
  labels:
    {{- include "probo.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "probo.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "probo.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "probo.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh", "-c"] # replaces ENTRYPOINT
          args: ["echo $DB_PASSWORD && cat /etc/probod/config.yml && exec /usr/local/bin/probod -cfg-file /etc/probod/config.yml"]

#          args:
#            - "-cfg-file"
#            - "/etc/probod/config.yml"
          env:
            # Database credentials
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "probo.fullname" . }}
                  key: db-password
            # S3 credentials
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "probo.fullname" . }}
                  key: s3-access-key
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "probo.fullname" . }}
                  key: s3-secret-key
            # Application secrets
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "probo.fullname" . }}
                  key: encryption-key
            - name: COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "probo.fullname" . }}
                  key: cookie-secret
            - name: PASSWORD_PEPPER
              valueFrom:
                secretKeyRef:
                  name: {{ include "probo.fullname" . }}
                  key: password-pepper
            - name: TRUST_TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "probo.fullname" . }}
                  key: trust-token-secret
            # Optional SMTP credentials
            {{- if .Values.probo.mailer.smtp.user }}
            - name: SMTP_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "probo.fullname" . }}
                  key: smtp-user
            {{- end }}
            {{- if .Values.probo.mailer.smtp.password }}
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "probo.fullname" . }}
                  key: smtp-password
            {{- end }}
            # Optional OpenAI API key
            {{- if .Values.probo.openai.apiKey }}
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "probo.fullname" . }}
                  key: openai-api-key
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.probo.service.port }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.probo.metrics.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/probod
              readOnly: false
            - name: data
              mountPath: /data
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "probo.fullname" . }}
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "probo.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
